diff -urNp mcelog-1.0pre3_20110718.orig/README mcelog-1.0pre3_20110718/README
--- mcelog-1.0pre3_20110718.orig/README	2012-01-26 09:08:14.844418084 -0500
+++ mcelog-1.0pre3_20110718/README	2012-01-26 09:13:26.504710981 -0500
@@ -4,27 +4,30 @@ actions (like killing processes etc.) an
 and manages various other advanced error responses like
 offlining memory, CPUs or triggering events.
 
+Please verify that your system supports MCE reporting with your hardware
+vendor.
+
 It primarily handles machine checks and thermal events, which
 are reported for errors detected by the CPU.
 
 It is recommended that mcelog runs on all x86 machines, both
-64bit (since early 2.6) and 32bit (since 2.6.32)
+64bit (since early 2.6) and 32bit (since 2.6.32).
 
-mcelog can run in several modi: cronjob, trigger, daemon
+mcelog can run in several modi: cronjob, trigger, daemon (the RHEL default).
 
 cronjob is the old method. mcelog runs every 5 minutes from cron and checks
-for errors. Disadvantage of this is that it can delay error reporting 
+for errors. Disadvantage of this is that it can delay error reporting
 significantly (upto 10 minutes) and does not allow mcelog to keep extended state.
 
 trigger is a newer method where the kernel runs mcelog on a error.
-This is configured with 
+This is configured with
 echo /usr/sbin/mcelog > /sys/devices/system/machinecheck/machinecheck0/trigger
 This is faster, but still doesn't allow mcelog to keep state,
 and has relatively high overhead for each error because a program has
 to be initialized from scratch.
 
 In daemon mode mcelog runs continuously as a daemon in the background
-and wait for errors. It is enabled by running mcelog --daemon & 
+and wait for errors. It is enabled by running mcelog --daemon &
 from a init script. This is the fastest and most feature-ful.
 
 The recommended mode is daemon, because several new functions (like page error
@@ -32,28 +35,8 @@ predictive failure analysis) require a c
 
 Documentation:
 
-The primary reference documentation are the man pages.
-lk10-mcelog.pdf has a overview over the errors mcelog handles
-(originally from Linux Kongress 2010)
-mce.pdf is a very old paper describing the first releases of mcelog
-(some parts are obsolete)
-
-For distributors:
-
-Please install a init script by default that runs mcelog in daemon mode.
-The mcelog.init script is a good starting point.
-
-Also install a logrotated file (mcelog.logrotate) or equivalent 
-when mcelog is running in daemon mode. 
-
-These two are not in make install.
-
-The installation also requires a config file (/etc/mcelog.conf) and
-the default triggers. These are all installed by "make install"
-
-/dev/mcelog is needed for mcelog operation
-If it's not there it can be created with mknod /dev/mcelog c 10 227
-Normally it should be created automatically in udev.
+The primary reference documentation are the man pages.  To access these pages
+type 'man mcelog' at a command prompt.
 
 Security:
 
@@ -70,7 +53,7 @@ doing corrective action that require roo
 
 In principle it would be possible to only keep CAP_SYS_ADMIN
 for page-offling, but that would prevent triggers from doing root
-only actions not covered by it (and CAP_SYS_ADMIN is not that different 
+only actions not covered by it (and CAP_SYS_ADMIN is not that different
 from full root)
 
 In daemon mode mcelog listens to a unix socket and processes
@@ -80,31 +63,10 @@ The uid/gid of the requestor is checked 
 (server.c) The client parsing/reply is currently done with full privileges
 of the daemon.
 
-Testing:
-
-There is a simple test suite in tests/. The test suite requires root to 
-run and access to mce-inject and a kernel with MCE injection support 
-(CONFIG_X86_MCE_INJECT).  It will kill any running mcelog daemon.
-
-Run it with "make test"
-
-The test suite requires the mce-inject tool, available from
-git://git.kernel.org/pub/utils/cpu/mce/mce-inject.git
-The mce-inject executable must be either in $PATH or in the
-../mce-inject directory.
-
-You can also test under valgrind with "make valgrind-test". For 
-this valgrind needs to be installed of course.  Advanced
-valgrind options can be specified with 
-make VALGRIND="valgrind --option" valgrind-test
-
-Other checks:
-
-make iccverify and make clangverify run the static verifiers
-in clang and icc respectively.
-
 License:
 
 This program is licensed under the subject of the GNU Public General
 License, v.2
 
+-------------------------------------------------------------------------------
+Further information can be obtained from http://mcelog.org .
